name: Create and Publish Release
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, reopened]
    branches:
      - master
permissions:
  contents: write
jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Get package version
        id: get_version
        run: echo "PACKAGE_VERSION=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.PACKAGE_VERSION }}
          name: v${{ env.PACKAGE_VERSION }}
          body: ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  publish-package:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: https://registry.npmjs.org
      - name: Publish package
        run: npm ci && npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  deploy:
    runs-on: ubuntu-latest
    needs: publish-package
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs mkdocs-material
          pip install "mkdocs-material[imaging]"
      - name: Deploy to GitHub Pages
        run: |
          mkdocs gh-deploy --force
